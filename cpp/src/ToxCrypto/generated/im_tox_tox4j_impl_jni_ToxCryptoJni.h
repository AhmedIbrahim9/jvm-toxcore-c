/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class im_tox_tox4j_impl_jni_ToxCryptoJni */

#ifndef _Included_im_tox_tox4j_impl_jni_ToxCryptoJni
#define _Included_im_tox_tox4j_impl_jni_ToxCryptoJni
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxPassKeyEncrypt
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxPassKeyEncrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxGetSalt
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxGetSalt
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxIsDataEncrypted
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxIsDataEncrypted
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxPassKeyDeriveWithSalt
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxPassKeyDeriveWithSalt
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxPassKeyDerive
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxPassKeyDerive
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxPassKeyDecrypt
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxPassKeyDecrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    toxHash
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_toxHash
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    randombytes
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_randombytes
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    cryptoBoxKeypair
 * Signature: ([B[B)I
 */
JNIEXPORT jint JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_cryptoBoxKeypair
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    cryptoBox
 * Signature: ([B[B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_cryptoBox
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    cryptoBoxOpen
 * Signature: ([B[B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_cryptoBoxOpen
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    cryptoBoxBeforenm
 * Signature: ([B[B[B)I
 */
JNIEXPORT jint JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_cryptoBoxBeforenm
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    cryptoBoxAfternm
 * Signature: ([B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_cryptoBoxAfternm
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     im_tox_tox4j_impl_jni_ToxCryptoJni
 * Method:    cryptoBoxOpenAfternm
 * Signature: ([B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_im_tox_tox4j_impl_jni_ToxCryptoJni_cryptoBoxOpenAfternm
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
